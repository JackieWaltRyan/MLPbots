from asyncio import run
from traceback import format_exc

from discord import Embed
from discord.ext.commands import Cog
from discord.ext.tasks import loop
from discord.utils import get
from discord_components_mirror import Button, ButtonStyle, SelectOption, Select
from pymongo import ASCENDING

from mlpbots import DB, logs, FOOTER


class Posts(Cog):
    def __init__(self, bot):
        try:
            self.BOT = bot
            self.channel_rules = DB["channels"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ü—Ä–∞–≤–∏–ª–∞"})["_id"]
            self.channel_roles = DB["channels"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–†–æ–ª–∏"})["_id"]
            self.channel_player = DB["channels"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ü–ª–µ–µ—Ä 1"})["_id"]
            self.channel_game = DB["channels"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ò–≥—Ä–∞"})["_id"]
            self.role_pony = DB["roles"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ü–æ–Ω–∏"})["_id"]
            self.role_bots = DB["roles"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ü—Ä–∏–Ω—Ü–µ—Å—Å—ã"})["_id"]
            self.role_gamer = DB["roles"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ò–≥—Ä–æ–∫"})["_id"]
            self.role_nsfw = DB["roles"].find_one(filter={"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "18+"})["_id"]
            self.role_rases = [x["_id"] for x in DB["roles"].find({"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–†–∞—Å—ã"})]
            self.role_minis = [x["_id"] for x in DB["roles"].find({"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞"})]
            self.posts.start()
        except Exception:
            run(main=logs(level="ERROR",
                          message=format_exc()))

    async def post_rules(self):
        try:
            embed = Embed(title="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –º–∏–ª–∞—è –ø–æ–Ω—è—à–∫–∞ –≤ –Ω–∞—à–µ–º –∫–ª—É–±–µ!",
                          color=0x008000,
                          description="–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ, —ç—Ç–æ—Ç –∫–ª—É–± —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∏ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è "
                                      "–≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –ª—é–±—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç–µ–º—ã. –ù–æ —Ç–µ–º –Ω–µ –º–µ–Ω–µ–µ, –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è "
                                      "—É—é—Ç–Ω–æ–π –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã, —É –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∞–≤–∏–ª:")
            embed.add_field(name="–ü—Ä–∞–≤–∏–ª–∞:",
                            value=":one: –ù–µ –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! –ù–µ –æ–±—Å—É–∂–¥–∞—Ç—å –∏ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –≤–Ω–µ—à–Ω–æ—Å—Ç—å, "
                                  "–≥–æ–ª–æ—Å, –∏ –ø–æ–¥–æ–±–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!\n\n"
                                  ":two: –ù–µ –æ–±—Å—É–∂–¥–∞—Ç—å —Ä–µ–ª–∏–≥–∏—é, –ø–æ–ª–∏—Ç–∏–∫—É, —Ä–∞—Å–æ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –∏ –¥—Ä—É–≥–∏–µ –ø–æ–¥–æ–±–Ω—ã–µ —Ç–µ–º—ã, "
                                  "–∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∑–∞–¥–µ—Ç—å –∏ –æ—Å–∫–æ—Ä–±–∏—Ç—å —á—É–≤—Å—Ç–≤–∞ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!\n\n"
                                  ":three: –í –Ω–∞—à–µ–º –∫–ª—É–±–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≥–ª–∞–≤–Ω—ã–π –∑–∞–∫–æ–Ω –≠–∫–≤–µ—Å—Ç—Ä–∏–∏: –î—Ä—É–∂–±–∞ - —ç—Ç–æ —á—É–¥–æ! –ò –º—ã "
                                  "–∏—Å–∫—Ä–µ–Ω–Ω–µ –Ω–∞–¥–µ–µ–º—Å—è –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –≤—Å–µ–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–ª—É–±–∞!")
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1021085537802649661/1021117457819250829/"
                                    "PinkiePieWannaHugYou.png")
            embed.set_footer(text=FOOTER["–¢–µ–∫—Å—Ç"],
                             icon_url=FOOTER["–°—Å—ã–ª–∫–∞"])
            await self.BOT.get_channel(id=self.channel_rules).send(embed=embed,
                                                                   components=[[Button(label="–°–æ–≥–ª–∞—Å–µ–Ω!",
                                                                                       id="rules_yes",
                                                                                       style=ButtonStyle.green),
                                                                                Button(label="–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω!",
                                                                                       id="rules_no",
                                                                                       style=ButtonStyle.red)]])
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())

    async def post_rases(self):
        try:
            description, options, i = [], [[SelectOption(label="üö´ –ë–µ–∑ —Ä–∞—Å—ã (—É–±—Ä–∞—Ç—å —Ä–æ–ª—å)",
                                                         value="–ë–µ–∑ —Ä–∞—Å—ã")]], 0
            for role in DB["roles"].find({"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–†–∞—Å—ã"}).sort(key_or_list="–ù–∞–∑–≤–∞–Ω–∏–µ",
                                                                     direction=ASCENDING):
                description.append(f"<@&{role['_id']}>\n\n")
                if len(options[i]) < 25:
                    options[i].append(SelectOption(label=role["–ù–∞–∑–≤–∞–Ω–∏–µ"],
                                                   value=str(role["_id"])))
                else:
                    i += 1
                    options.append([SelectOption(label="üö´ –ë–µ–∑ —Ä–∞—Å—ã (—É–±—Ä–∞—Ç—å —Ä–æ–ª—å)",
                                                 value="–ë–µ–∑ —Ä–∞—Å—ã"),
                                    SelectOption(label=role["–ù–∞–∑–≤–∞–Ω–∏–µ"],
                                                 value=str(role["_id"]))])
            embed = Embed(title="–†–∞—Å—ã:",
                          color=0xFFA500,
                          description="".join([x for x in description]))
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1021085537802649661/1021117457483694161/"
                                    "chars.png")
            embed.set_footer(text=FOOTER["–¢–µ–∫—Å—Ç"],
                             icon_url=FOOTER["–°—Å—ã–ª–∫–∞"])
            await self.BOT.get_channel(id=self.channel_roles).send(embed=embed,
                                                                   components=[Select(options=x) for x in options])
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())

    async def post_minis(self):
        try:
            description, options, i = [], [[SelectOption(label="üö´ –ë–µ–∑ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ (—É–±—Ä–∞—Ç—å —Ä–æ–ª—å)",
                                                         value="–ë–µ–∑ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞")]], 0
            for role in DB["roles"].find({"–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞"}).sort(key_or_list="–ù–∞–∑–≤–∞–Ω–∏–µ",
                                                                             direction=ASCENDING):
                description.append(f"<@&{role['_id']}>\n\n")
                if len(options[i]) < 25:
                    options[i].append(SelectOption(label=role["–ù–∞–∑–≤–∞–Ω–∏–µ"],
                                                   value=str(role["_id"])))
                else:
                    i += 1
                    options.append([SelectOption(label="üö´ –ë–µ–∑ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ (—É–±—Ä–∞—Ç—å —Ä–æ–ª—å)",
                                                 value="–ë–µ–∑ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞"),
                                    SelectOption(label=role["–ù–∞–∑–≤–∞–Ω–∏–µ"],
                                                 value=str(role["_id"]))])
            embed = Embed(title="–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞:",
                          color=0xFF0000,
                          description="".join([x for x in description]))
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1021085537802649661/1021117457102016512/"
                                    "mine6.png")
            embed.set_footer(text=FOOTER["–¢–µ–∫—Å—Ç"],
                             icon_url=FOOTER["–°—Å—ã–ª–∫–∞"])
            await self.BOT.get_channel(id=self.channel_roles).send(embed=embed,
                                                                   components=[Select(options=x) for x in options])
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())

    async def post_roles(self):
        try:
            embed = Embed(title="–†–∞–∑–Ω–æ–µ:",
                          color=0xFFFF00,
                          description=f"<@&{self.role_gamer}> - –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∞–∫—Ç–∏–≤–Ω–æ –∏–≥—Ä–∞–µ—Ç –≤ –∏–≥—Ä—É.\n\n"
                                      f"<@&{self.role_nsfw}> - –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Å—Ç–∞—Ä—à–µ 18 –∏ –Ω–µ –±–æ–∏—Ç—Å—è R34.\n\n"
                                      f"–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —É–±—Ä–∞—Ç—å —Ä–æ–ª—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1021085537802649661/1021146958095712317/"
                                    "cheer.png")
            embed.set_footer(text=FOOTER["–¢–µ–∫—Å—Ç"],
                             icon_url=FOOTER["–°—Å—ã–ª–∫–∞"])
            await self.BOT.get_channel(id=self.channel_roles).send(embed=embed,
                                                                   components=[[Button(label="ü¶Ñ –ò–≥—Ä–æ–∫–∏",
                                                                                       id="roles_gamer",
                                                                                       style=ButtonStyle.gray),
                                                                                Button(label="ü¶Ñ 18+",
                                                                                       id="roles_nsfw",
                                                                                       style=ButtonStyle.gray)]])
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())

    @loop(count=1)
    async def posts(self):
        try:
            await self.BOT.get_channel(id=self.channel_rules).purge()
            await self.post_rules()
            await self.BOT.get_channel(id=self.channel_roles).purge()
            await self.post_rases()
            await self.post_minis()
            await self.post_roles()
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())

    @Cog.listener()
    async def on_button_click(self, interaction):
        try:
            if interaction.component.id == "rules_yes":
                await interaction.send(content=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å <@&{self.role_pony}>! –¢–µ–ø–µ—Ä—å —É –≤–∞—Å "
                                               f"–µ—Å—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º —Å–µ—Ä–≤–µ—Ä–∞!\n\n–í –∫–∞–Ω–∞–ª–µ "
                                               f"<#{self.channel_roles}> –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Å–µ–±–µ –†–∞—Å—Å—É, –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ, "
                                               f"–∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ä–æ–ª–∏.\n–í –∫–∞–Ω–∞–ª–µ <#{self.channel_player}> –≤—ã "
                                               f"–º–æ–∂–µ—Ç–µ –ø–æ—Å–ª—É—à–∞—Ç—å –ø–æ–Ω–∏-—Ä–∞–¥–∏–æ.\n–í –∫–∞–Ω–∞–ª–µ <#{self.channel_game}> –≤—ã "
                                               f"–º–æ–∂–µ—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É \"–ü–æ—Ö–∏—â–µ–Ω–Ω–∞—è –ø–æ–Ω–∏\".\n\n–¢–∞–∫ –∂–µ "
                                               f"—É –Ω–∞—Å –µ—Å—Ç—å <@&{self.role_bots}>. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º "
                                               f"–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π **!help**.")
                await interaction.user.add_roles(get(iterable=interaction.user.guild.roles,
                                                     id=self.role_pony))
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())
        try:
            if interaction.component.id == "rules_no":
                await interaction.send(content=f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏, —Ç–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ "
                                               f"–ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É!")
                await interaction.user.remove_roles(get(iterable=interaction.user.guild.roles,
                                                        id=self.role_pony))
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())
        try:
            if interaction.component.id == "roles_gamer":
                if get(iterable=interaction.user.roles,
                       id=self.role_gamer) is None:
                    await interaction.send(content=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å <@&{self.role_gamer}>!")
                    await interaction.user.add_roles(get(iterable=interaction.user.guild.roles,
                                                         id=self.role_gamer))
                else:
                    await interaction.send(content=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º —É–±—Ä–∞–Ω–∞ —Ä–æ–ª—å <@&{self.role_gamer}>!")
                    await interaction.user.remove_roles(get(iterable=interaction.user.guild.roles,
                                                            id=self.role_gamer))
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())
        try:
            if interaction.component.id == "roles_nsfw":
                if get(iterable=interaction.user.roles,
                       id=self.role_nsfw) is None:
                    await interaction.send(content=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å <@&{self.role_nsfw}>! "
                                                   f"–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ <#1007577254936719391>!")
                    await interaction.user.add_roles(get(iterable=interaction.user.guild.roles,
                                                         id=self.role_nsfw))
                else:
                    await interaction.send(content=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º —É–±—Ä–∞–Ω–∞ —Ä–æ–ª—å <@&{self.role_nsfw}>!")
                    await interaction.user.remove_roles(get(iterable=interaction.user.guild.roles,
                                                            id=self.role_nsfw))
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())

    @Cog.listener()
    async def on_select_option(self, interaction):
        try:
            if interaction.values[0] == "–ë–µ–∑ —Ä–∞—Å—ã":
                await interaction.send(content="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º —É–±—Ä–∞–Ω—ã –≤—Å–µ –†–∞—Å—ã!")
                for role in self.role_rases:
                    await interaction.user.remove_roles(get(iterable=interaction.user.guild.roles,
                                                            id=role))
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())
        try:
            if interaction.values[0] == "–ë–µ–∑ –º–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞":
                await interaction.send(content="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º —É–±—Ä–∞–Ω—ã –≤—Å–µ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞!")
                for role in self.role_minis:
                    await interaction.user.remove_roles(get(iterable=interaction.user.guild.roles,
                                                            id=role))
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())
        try:
            if interaction.values[0] in str(self.role_rases) or interaction.values[0] in str(self.role_minis):
                await interaction.send(content=f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º –≤—ã–¥–∞–Ω–∞ —Ä–æ–ª—å <@&{interaction.values[0]}>!")
                await interaction.user.add_roles(get(iterable=interaction.user.guild.roles,
                                                     id=int(interaction.values[0])))
        except Exception:
            await logs(level="ERROR",
                       message=format_exc())


def setup(bot):
    try:
        bot.add_cog(cog=Posts(bot=bot))
    except Exception:
        run(main=logs(level="ERROR",
                      message=format_exc()))
